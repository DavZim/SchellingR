// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// run_schelling_rcpp
Rcpp::List run_schelling_rcpp(int size, double percent_empty, double threshold, int number_of_groups, int max_rounds, int seed);
RcppExport SEXP _SchellingR_run_schelling_rcpp(SEXP sizeSEXP, SEXP percent_emptySEXP, SEXP thresholdSEXP, SEXP number_of_groupsSEXP, SEXP max_roundsSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< double >::type percent_empty(percent_emptySEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type number_of_groups(number_of_groupsSEXP);
    Rcpp::traits::input_parameter< int >::type max_rounds(max_roundsSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(run_schelling_rcpp(size, percent_empty, threshold, number_of_groups, max_rounds, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SchellingR_run_schelling_rcpp", (DL_FUNC) &_SchellingR_run_schelling_rcpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SchellingR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
